@model IEnumerable<StaffManagementN.Models.BorrowedBookModel>

@{
    ViewData["Title"] = "Borrowed Books";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0 text-gray-800">Borrowed Books Management</h1>
    <a asp-action="Create" class="btn btn-primary">Create New Borrowed Book Record</a>
</div>

<div class="card shadow mb-4">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Book Title</th>
                        <th>Member Name</th>
                        <th>Borrow Date</th>
                        <th>Borrowed During</th>
                        <th>Due Date</th>
                        <th>Return Status</th>
                        <th>Returned During</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderByDescending(b => b.BorrowDate))
                    {
                        <tr>
                            <td>
                                <a asp-controller="Books" asp-action="Details" asp-route-id="@item.Book.BookId">
                                    @item.Book.Title
                                </a>
                            </td>
                            <td>
                                <a asp-controller="Members" asp-action="Details" asp-route-id="@item.Member.MemberId">
                                    @item.Member.FirstName @item.Member.LastName
                                </a>
                            </td>
                            <td>@item.BorrowDate.ToString("g")</td>
                            <td>
                                @if (item.BorrowedDuringShift != null)
                                {
                                    <a asp-controller="Shift" asp-action="Details" asp-route-id="@item.BorrowedDuringShift.ShiftID">
                                        Shift @item.BorrowedDuringShift.ShiftID
                                    </a>
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>
                            <td>
                                @item.DueDate.ToString("g")
                                @if (!item.ReturnDate.HasValue && DateTime.Now > item.DueDate)
                                {
                                    <span class="badge bg-danger ms-2">Overdue</span>
                                }
                            </td>
                            <td>
                                @if (item.ReturnDate.HasValue)
                                {
                                    if (item.ReturnDate.Value > item.DueDate)
                                    {
                                        <span class="badge bg-warning">
                                            Returned Late<br />
                                            @item.ReturnDate.Value.ToString("g")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">
                                            Returned On Time<br />
                                            @item.ReturnDate.Value.ToString("g")
                                        </span>
                                    }
                                }
                                else
                                {
                                    <span class="badge bg-primary">Active</span>
                                }
                            </td>
                            <td>
                                @if (item.ReturnedDuringShift != null)
                                {
                                    <a asp-controller="Shift" asp-action="Details" asp-route-id="@item.ReturnedDuringShift.ShiftID">
                                        Shift @item.ReturnedDuringShift.ShiftID
                                    </a>
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>
                            <td class="text-end">
                                @if (!item.ReturnDate.HasValue)
                                {
                                    <form asp-action="Return" method="post" style="display: inline;">
                                        <input type="hidden" name="id" value="@item.BorrowId" />
                                        <button type="submit" class="btn btn-sm btn-success me-1">Return</button>
                                    </form>
                                }
                                <a asp-action="Edit" asp-route-id="@item.BorrowId" class="btn btn-sm btn-outline-primary me-1">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.BorrowId" class="btn btn-sm btn-outline-info me-1">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.BorrowId" class="btn btn-sm btn-outline-danger">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div> 