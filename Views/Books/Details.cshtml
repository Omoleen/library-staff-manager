@model StaffManagementN.Models.BookModel

@{
    ViewData["Title"] = "Book Details";
    var isCurrentlyBorrowed = Model.BorrowedBooks?.Any(b => !b.ReturnDate.HasValue) ?? false;
    var currentBorrowing = Model.BorrowedBooks?.FirstOrDefault(b => !b.ReturnDate.HasValue);
}

<h1 class="h3 mb-2 text-gray-800">Book Details</h1>
<p class="mb-4">Details for @Model.Title.</p>

<div class="row">
    <div class="col-lg-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Book Information</h6>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Title</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Title)</dd>
                    <dt class="col-sm-4">Author</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Author)</dd>
                    <dt class="col-sm-4">ISBN</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.ISBN)</dd>
                    <dt class="col-sm-4">Status</dt>
                    <dd class="col-sm-8">
                        @if (isCurrentlyBorrowed)
                        {
                            if (DateTime.Now > currentBorrowing.DueDate)
                            {
                                <span class="badge bg-danger">Overdue</span>
                            }
                            else
                            {
                                <span class="badge bg-primary">Borrowed</span>
                            }
                        }
                        else
                        {
                            <span class="badge bg-success">Available</span>
                        }
                    </dd>
                    @if (isCurrentlyBorrowed)
                    {
                        <dt class="col-sm-4">Current Borrower</dt>
                        <dd class="col-sm-8">
                            <a asp-controller="Members" asp-action="Details" asp-route-id="@currentBorrowing.Member.MemberId">
                                @currentBorrowing.Member.FirstName @currentBorrowing.Member.LastName
                            </a>
                        </dd>
                        <dt class="col-sm-4">Due Date</dt>
                        <dd class="col-sm-8">
                            @currentBorrowing.DueDate.ToShortDateString()
                            @if (DateTime.Now > currentBorrowing.DueDate)
                            {
                                <span class="text-danger">
                                    (Overdue by @((DateTime.Now - currentBorrowing.DueDate).Days) days)
                                </span>
                            }
                            else
                            {
                                <span class="text-muted">
                                    (@((currentBorrowing.DueDate - DateTime.Now).Days) days remaining)
                                </span>
                            }
                        </dd>
                    }
                </dl>
                <div class="mt-3">
                    <a asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-primary">Edit</a>
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    @if (!isCurrentlyBorrowed)
                    {
                        <a asp-controller="BorrowedBooks" asp-action="Create" asp-route-bookId="@Model.BookId" 
                           class="btn btn-success">Lend Book</a>
                    }
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Statistics</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card bg-light mb-3">
                            <div class="card-body">
                                <h6 class="card-title">Total Times Borrowed</h6>
                                <p class="h4">
                                    @(Model.BorrowedBooks?.Count() ?? 0)
                                    <small class="text-muted">times</small>
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card bg-light mb-3">
                            <div class="card-body">
                                <h6 class="card-title">Times Overdue</h6>
                                <p class="h4">
                                    @(Model.BorrowedBooks?.Count(b => b.ReturnDate.HasValue && b.ReturnDate.Value > b.DueDate) ?? 0)
                                    <small class="text-muted">times</small>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">Borrowing History</h6>
                @if (!isCurrentlyBorrowed)
                {
                    <a asp-controller="BorrowedBooks" asp-action="Create" asp-route-bookId="@Model.BookId" 
                       class="btn btn-sm btn-primary">
                        Lend Book
                    </a>
                }
            </div>
            <div class="card-body">
                @if (Model.BorrowedBooks != null && Model.BorrowedBooks.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Member</th>
                                    <th>Borrow Date</th>
                                    <th>Due Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var borrow in Model.BorrowedBooks.OrderByDescending(b => b.BorrowDate))
                                {
                                    <tr>
                                        <td>
                                            <a asp-controller="Members" asp-action="Details" asp-route-id="@borrow.Member.MemberId">
                                                @borrow.Member.FirstName @borrow.Member.LastName
                                            </a>
                                        </td>
                                        <td>@borrow.BorrowDate.ToShortDateString()</td>
                                        <td>@borrow.DueDate.ToShortDateString()</td>
                                        <td>
                                            @if (!borrow.ReturnDate.HasValue)
                                            {
                                                if (DateTime.Now > borrow.DueDate)
                                                {
                                                    <span class="badge bg-danger">Overdue</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-primary">Borrowed</span>
                                                }
                                            }
                                            else
                                            {
                                                var isLate = borrow.ReturnDate.Value > borrow.DueDate;
                                                <span class="badge @(isLate ? "bg-warning" : "bg-success")">
                                                    Returned @(isLate ? "Late" : "On Time")
                                                    <br />
                                                    @borrow.ReturnDate.Value.ToShortDateString()
                                                </span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <a asp-controller="BorrowedBooks" asp-action="Details" asp-route-id="@borrow.BorrowId" 
                                                   class="btn btn-sm btn-info">Details</a>
                                                @if (!borrow.ReturnDate.HasValue)
                                                {
                                                    <form asp-controller="BorrowedBooks" asp-action="Return" asp-route-id="@borrow.BorrowId" 
                                                          method="post" style="display: inline;">
                                                        <button type="submit" class="btn btn-sm btn-success">Return</button>
                                                    </form>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <p class="mb-3">This book has never been borrowed.</p>
                        <a asp-controller="BorrowedBooks" asp-action="Create" asp-route-bookId="@Model.BookId" 
                           class="btn btn-primary">
                            Lend First Time
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div> 